library(tigerstats)
#Binomial Probability
#1. Exactly r P(X=r)
dbinom(r,n,p)  #Exact value of r
#Ex.1 : What is the probability of getting exactly 3'H if 10 coins are tossed.
#n=10, r=3,p=1/2
dbinom(3,10,0.5)
#Ex.2 : What is the probability of getting exactly three 2's if 8 dice are rolled.
#n=8, r=3,p=1/6
dbinom(3,8,1/6)
# How many heads will have a probability of 0.25 will come out when a coin
# is tossed 51 times.
x <- qbinom(0.25,51,1/2)
x
#Binomial Probability distribution
# Sample Size of 10
success <- c(0:10)
X=dbinom(success, size = 10, prob = 0.25)
plot(success, X)
# Sample Size of 30
suc <- c(0:30)
y <-  dbinom(suc, size = 30, prob = 0.25)
plot(suc, y,
type = "h",
main = "Sample Size of 30, p = 0.25",
xlab = "Number of Successes",
ylab = "Probability of Success")
# Sample Size of 100
suc <- c(0:100)
y <-  dbinom(suc, size = 100, prob = 0.25)
plot(suc, y,
type = "h",
main = "Sample Size of 100, p = 0.25",
xlab = "Number of Successes",
ylab = "Probability of Success")
#1.uniform distribution
unif <- c(1:8)
unif
# Mean of our uniform distribution
mean(unif)
# Histogram
hist(unif, main = "Uniform Distribution", xlab = " ")
#Sample distribution with different size
# 1. Sample size of 3
sample_means <- c( )
for(i in 1:1000){
sample_means[i] <- mean(sample(8, 3, replace = TRUE))
}
hist(sample_means, xlim = c(0,8), main = "Sample Size of 3", xlab = "Sample Means")
data("CO2")
View(CO2)
popsamp(10,CO2)
#subset
Chilled=subset(CO2,Treatment=="chilled")
Non_chilled=subset(CO2,Treatment=="nonchilled")
View(tree)
data()
View(TreeSeedlings)
#for random 10 observation
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
#to select random sample from particular subset
set.seed(10)
popsamp(4,Chilled)
# form a data frame and merge it to get sumaary for ANOVA#######
Front<-c(82, 83, 97, 93, 55, 67, 53)
Moddle<-c(83, 78, 68, 61, 77, 54, 69, 51, 63)
Back<-c(38, 59, 55, 66, 45, 52, 52, 61)
gc()
or
####Get summary of variable along three samples#######
library(dplyr)
View(ANOVA_problem)
View(mtcars)
View(CO2)
group_by(CO2, Treatment) %>%
summarise(
count = n(),
mean = mean(marks, na.rm = TRUE),
sd = sd(marks, na.rm = TRUE)
)
group_by(CO2, Treatment) %>%
summarise(
count = n(),
mean = mean(conc, na.rm = TRUE),
sd = sd(uptake, na.rm = TRUE)
)
d1 = group_by(CO2, Treatment) %>%
summarise(
count = n(),
mean = mean(conc, na.rm = TRUE),
sd = sd(uptake, na.rm = TRUE)
)
d1
########plot a boxplot##################
boxplot(conc ~ uptake, data = CO2,
xlab = "conc", ylab = "uptake",
frame = FALSE, col = c("#00AFBB", "#E7B800", "#FC4E07"))
########plot a boxplot##################
boxplot(conc ~ uptake, data = CO2,
xlab = "uptake", ylab = "conc",
frame = FALSE, col = c("#00AFBB", "#E7B800", "#FC4E07"))
############apply ANOVA command##########################
res.aov <- aov(conc ~ uptake, data = CO2)
#Get a summary
summary(res.aov)
##Print the result of ANOVA test
print(res.aov)
gc()
############Chi Square Testing########################
library("tidyverse")
data()
#Example 1##############
View(msleep)
summary(msleep)
vore.tab<-table(msleep$vore)
barplot(vore.tab)
chisq.test(vore.tab,y=NULL)
chisq.test(vore.tab)
#Ex.2####
data("mtcars")
table(mtcars$carb, mtcars$cyl)
chisq.test(mtcars$carb, mtcars$cyl)
# t-test####
#One-Sample
#Ex.1###
set.seed(0)
ship_vol <- c(rnorm(75, mean = 37000, sd = 2500))
ship_vol <- c(rnorm(75, mean = 37000, sd = 2500))
t.test(ship_vol, mu = 39000)
set.seed(2820)
pre_Treatment <- c(rnorm(2000, mean = 150, sd = 10))
post_Treatment <- c(rnorm(2000, mean = 144, sd = 9))
t.test(pre_Treatment, post_Treatment, paired = TRUE)
install.packages("BSDA")
library(BSDA)
#enter IQ levels for 20 patients
data = c(88, 92, 94, 94, 96, 97, 97, 97, 99, 99,
105, 109, 109, 109, 110, 112, 112, 113, 114, 115)
#perform one sample z-test
z.test(data, mu=100, sigma.x=15)
#enter IQ levels for 20 individuals from each city
cityA = c(82, 84, 85, 89, 91, 91, 92, 94, 99, 99,
105, 109, 109, 109, 110, 112, 112, 113, 114, 114)
cityB = c(90, 91, 91, 91, 95, 95, 99, 99, 108, 109,
109, 114, 115, 116, 117, 117, 128, 129, 130, 133)
#perform two sample z-test
z.test(x=cityA, y=cityB, mu=0, sigma.x=15, sigma.y=15)
View(CO2)
library(dplyr)
d1 = group_by(CO2, plant)
d2 = summarize(d1)
d1 = group_by(CO2, Plant)
d2 = summarize(d1)
View(d2)
d2 = summarize(d1, conc_mean=mean(d1$conc), uptake_mean=mean(d1$uptake))
View(d2)
d2 = summarize(d1, conc_mean=mean(conc), uptake_mean=mean(uptake))
View(d2)
d2 = summarize(d1, conc_mean=mean(conc), uptake_mean=mean(uptake), sd_conc=sd(conc), sd_uptake=sd(uptake))
View(d2)
mean(d1$conc)
mean(d1$uptake)
#for random 10 observation
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
#for random 10 observation
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
popsamp(10,CO2)
#subset
Chilled=subset(CO2,Treatment=="chilled")
Non_chilled=subset(CO2,Treatment=="nonchilled")
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
popsamp(10,CO2)
popsamp(10,CO2)
popsamp(10,CO2)
popsamp(10,CO2)
popsamp(10,CO2)
popsamp(10,CO2)
popsamp(10,CO2)
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
popsamp(10,CO2)
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
set.seed(5) #same random numbers 5 times
popsamp(10,CO2)
# r-test
my_data <- mtcars
head(my_data, 6)
res <- cor.test(my_data$wt, my_data$mpg, method = "pearson")
res
#linewidth requires the color attribute to be set a to a particular value
ggplot(diamonds, aes(x=cut)) + geom_bar(fill="Cyan", linewidth=2)
library(ggplot2)
#linewidth requires the color attribute to be set a to a particular value
ggplot(diamonds, aes(x=cut)) + geom_bar(fill="Cyan", linewidth=2)
#Dot Plot
ggplot(diamonds, aes(x=depth,y=price)) + geom_point()
View(CO2)
ggplot(CO2, aes(x=conc,y=uptake)) + geom_point()
d1 = arrange(CO2, conc)
View(d1)
ggplot(d1, aes(x=conc,y=uptake)) + geom_point()
ggplot(d1, aes(x=conc,y=uptake)) + geom_point(size=2)
ggplot(d1, aes(x=conc,y=uptake)) + geom_point(size=2, color="Red")
#Histogram
ggplot(d1, aes(x=uptake)) + geom_histogram(binwidth = 1.5)
#                                          Bin Size
ggplot(d1, aes(x=uptake)) + geom_histogram(binwidth = 1.5, color="Black", fill="Cyan")
#Box Plot
ggplot(d1, aes(x=uptake)) + geom_boxplot()
View(Placement_Data_Full_Class)
library(readxl)
Placement_Data_Full_Class <- read_excel("E:/Third Year/Statistical Data Analysis using R/Datasets/Placement_Data_Full_Class.xlsx")
View(Placement_Data_Full_Class)
#To understand the relationship between 2 variables, use geom_point()
plot1 = ggplot(Placement_Data_Full_Class, aes(mba_p, salary)) + geom_point()
print(plot1)
plot2 = ggplot(Placement_Data_Full_Class, aes(ssc_p, hsc_p)) + geom_point()
print(plot2)
#Third variable (categorical) using color attribute
plot3 = ggplot(Placement_Data_Full_Class, aes(mba_p, salary, color=gender)) + geom_point()
print(plot3)
#Fourth variable (categorical) using shape attribute
#In scatterplot two numerical and two categorical variables are mapped.
plot4 = ggplot(Placement_Data_Full_Class, aes(mba_p, salary, color=gender, shape=specialisation)) + geom_point()
print(plot4)
#Q1. Find relationship between ssc_p and hsc_p as per gender and hsc_board
plot5 = ggplot(Placement_Data_Full_Class, aes(ssc_p, hsc_p, color=gender, shape=ssc_b)) + geom_point()
print(plot5)
#Q1. Find relationship between ssc_p and hsc_p as per gender and hsc_board
plot5 = ggplot(Placement_Data_Full_Class, aes(ssc_p, hsc_p, color=gender, shape=ssc_b)) + geom_point()
print(plot5)
#Boxplot for Univariate Data
plot6 = ggplot(Placement_Data_Full_Class, aes(mba_p)) + geom_boxplot()
print(plot6)
plot7 = ggplot(Placement_Data_Full_Class, aes(mba_p,specialisation)) + geom_boxplot() + geom_point()
print(plot7)
plot8 = ggplot(Placement_Data_Full_Class, aes(mba_p,specialisation)) + geom_boxplot() + geom_point()
print(plot8)
#Find the distribution of salaries as per gender and comment on minimum salary and maximum salary
plot9 = ggplot(Placement_Data_Full_Class, aes(salary,gender)) + geom_boxplot()
print(plot9)
summary(Placement_Data_Full_Class)
#min_salary (M+F) = 2e+05
#max_salary (M) =
str(Placement_Data_Full_Class)
#facet_warp()
plot10 = ggplot(Placement_Data_Full_Class, aes(salary,gender)) + geom_boxplot() + facet_wrap(~specialisation)
print(plot10)
#Case Study: Loan_Sanction_Test
View(loan_sanction_test)
#Case Study: Loan_Sanction_Test
View(loan_sanction_test)
library(readr)
loan_sanction_test <- read_csv("E:/Third Year/Statistical Data Analysis using R/Datasets/loan_sanction_test.csv")
View(loan_sanction_test)
#Q1. Find which applicants based on gender are more?
#Use Bar Graph
plot1 = ggplot(loan_sanction_test, aes(x=Gender)) + geom_bar()
print(plot1)
#Q2. Draw a graph including gender based variations in property area
plot2 = ggplot(loan_sanction_test, aes(x=Gender,fill=Property_Area)) + geom_bar(pos="dodge")
print(plot2)
#Used for comparison of frequencies
plot3 = ggplot(loan_sanction_test, aes(x=Gender,fill=Property_Area)) + geom_bar(pos="fill")
print(plot3)
d3 = na.omit(loan_sanction_test)
View(d3)
d1 = group_by(d3, Self_Employed)
View(d2)
plot3 = ggplot(na.omit(loan_sanction_test), aes(x=LoanAmount, color=Education)) + geom_boxplot() + facet_wrap(~Gender)
print(plot3)
set.seed(1)
srs <- popsamp(10,CO2)
install.packages("tigerstats")
library(tigerstats)
View(CO2)
set.seed(1)
srs <- popsamp(10,CO2)
srs
set.seed(49464)
Sys=sample(1:4,1)
start
sys.samp = seq(start, start + 4*(42-1), 42)
set.seed(123)
nonChilledd=subset(CO2,Treatment=="nonchilled")
nonChilledd
#Gives subset i.e. strata of treatment nonchilled
chilled.samp=popsamp(3,Chilledd)
set.seed(123)
nonChilledd=subset(CO2,Treatment=="nonchilled")
nonChilledd
chilled.samp=popsamp(3,Chilledd)
chilled.samp
#Cluster sampling
#make this example reproducible
set.seed(1)
#create data frame
df <- data.frame(tour = rep(1:10, each=20),
experience = rnorm(200, mean=7, sd=1))
#view first six rows of data frame
head(df)
#randomly choose 4 tour groups out of the 10
clusters <- sample(unique(df$tour), size=4, replace=F)
#define sample as all members who belong to one of the 4 tour groups
cluster_sample <- df[df$tour %in% clusters, ]
#view how many customers came from each tour
table(cluster_sample$tour)
View(iris)
dat <- iris # load the iris dataset and renamed it dat
#preview of this dataset and its structure:
head(dat) # first 6 observations
str(dat) # structure of dataset
min(dat$Sepal.Length)
max(dat$Sepal.Length)
#Alternatively the range() function
rng <- range(dat$Sepal.Length)
rng
# mean, median, mode
mean(dat$Sepal.Length)
median(dat$Sepal.Length)
#First and third quartile
quantile(dat$Sepal.Length, 0.25) # first quartile
quantile(dat$Sepal.Length, 0.75) # third quartile
#Standard deviation and variance
sd(dat$Sepal.Length) # standard deviation
var(dat$Sepal.Length) # variance
#to compute the standard deviation (or variance) of multiple variables at the same time
lapply(dat[, 1:4], sd)
lapply(dat[, 1:4], mean)
#Summary
summary(dat)
by(dat, dat$Species, summary)
by(diamonds, diamonds$cut, summary)
#Desriptive analysis by
library(pastecs)
stat.desc(dat)
#Desriptive analysis by descr
install.packages("summarytools")
descr(dat, headings = FALSE ) # most common descriptive statistics
descr(dat, headings = FALSE, stats = "common" )
#Coefficient of variation
sd(dat$Sepal.Length) / mean(dat$Sepal.Length)
#Coefficient of variation
sd(dat$Sepal.Length) / mean(dat$Sepal.Length) * 100
#Mode
tab <- table(dat$Sepal.Length) # number of occurrences for each unique value
tab
sort(tab, decreasing = TRUE) # sort highest to lowest
sort(table(dat$Species), decreasing = TRUE)
#To visualize dispersion of Sepal Length species wise
ggplot(dat) +
aes(x = Sepal.Length, Species) +
geom_boxplot()+geom_point()
Dat1=group_by(dat, Species)
df
View(df)
df=summarise(Dat1, sd=sd(Sepal.Length), CV=(sd(Sepal.Length)/mean(Sepal.Length))*100)
View(df)
#Correlation
Data1=select(iris,-Species)
cor(Data1)
d1=cor(Data1)
library(corrplot)
corrplot(d1)
corrplot(d1, method="number")
corrplot(d1, method="pie")
#Scatterplot to understand Correlation
plot(dat$Sepal.Length, dat$Petal.Length)
ggplot(dat) +
aes(x = Sepal.Length, y = Petal.Length) +
geom_point(size=1.5, col="Blue") + labs(title = "Relation Sepal Length and Petal Length")
ggplot(dat) +
aes(x = Sepal.Length, y = Petal.Length, colour = Species) +
geom_point()
plot(density(dat$Sepal.Length))
#An example when we cant apply Regression model
library(readr)
Placement_Data_Full_Class_3_ <- read_csv("C:/Users/Admin/Downloads/Placement_Data_Full_Class (3).csv")
Placement_Data_Full_Class_3_ <- read_csv("E:\Third Year\Statistical Data Analysis using R\Datasets\Placement_Data_Full_Class.xlsx")
Placement_Data_Full_Class_3_ <- read_csv("E:\\Third Year\\Statistical Data Analysis using R\\Datasets\\Placement_Data_Full_Class.xlsx")
Placement_Data_Full_Class_3_ <- readxl("E:\\Third Year\\Statistical Data Analysis using R\\Datasets\\Placement_Data_Full_Class.xlsx")
Placement_Data_Full_Class_3_ <- read_excel("E:\\Third Year\\Statistical Data Analysis using R\\Datasets\\Placement_Data_Full_Class.xlsx")
#Before finding correlation categorical variables should be removed
Data=select(Placement_Data_Full_Class_3_, ssc_p, hsc_p, degree_p, mba_p, salary)
is.na(Data)
na.fail(Placement_Data_Full_Class_3_)
#NA's are found in salary ,omit NA  entries
Data=na.omit(Data)
cor(Data)
CORR=cor(Data)
library(corrplot)
corrplot(CORR, method="color")
#If salary is dependent variable its observed very poor correlation independent varibles
#Let us check is there any outliers
ggplot(Data, aes(salary))+geom_boxplot()+xlim(200000,300000)
ggplot(Data, aes(ssc_p))+geom_boxplot()
ggplot(Data, aes(hsc_p))+geom_boxplot()
ggplot(Data, aes(mba_p))+geom_boxplot()
#Outliers are very less which can not affect on correlation
max(Data$salary)
summary(Data)
#Outliers are removed
New_Data=filter(Data, salary<300000, hsc_p<90)
cor(New_Data)
#Now consider another data
library(readr)
heart_data <- read_csv("E:\\Third Year\\Statistical Data Analysis using R\\Datasets\\heart.csv")
Heart_Data=select(heart_data, -1)
#Before finding correlation categorical variables should be removed
cor(Heart_Data)
#Strong cor-relationship observed in independent and dependent variables
#multicollinearity(Correlation in independent variable) is not obeserved
ggplot(Heart_Data, aes(biking))+geom_boxplot()
ggplot(Heart_Data, aes(smoking))+geom_boxplot()
ggplot(Heart_Data, aes(heart.disease))+geom_boxplot()
ggplot(Heart_Data, aes(heart.disease))+geom_histogram(fill="white", color="red")
ggplot(Heart_Data, aes(biking,heart.disease))+geom_point()
ggplot(Heart_Data, aes(smoking,heart.disease))+geom_point()
# Regression Model
Heart_disease.Model=lm(heart.disease~biking+smoking,Heart_Data)
summary(Heart_disease.Model)
#Create a new dataframe with the information needed to plot the model
plotting.data<-expand.grid( biking = seq(min(Heart_Data$biking), max(Heart_Data$biking), length.out=30),
smoking=c(min(Heart_Data$smoking), mean(Heart_Data$smoking), max(Heart_Data$smoking)))
#Predict the values of heart disease based on your linear model
plotting.data$predicted.y <- predict.lm(Heart_disease.Model, newdata=plotting.data)
#Round the smoking numbers to two decimals
plotting.data$smoking <- round(plotting.data$smoking, digits = 2)
#Change the ‘smoking’ variable into a factor
plotting.data$smoking <- as.factor(plotting.data$smoking)
#Plot the original data
heart.plot <- ggplot(Heart_Data, aes(x=biking, y=heart.disease)) +
geom_point()
heart.plot
#Add the regression lines
heart.plot <- heart.plot +
geom_line(data=plotting.data, aes(x=biking, y=predicted.y, color=smoking), size=1.25)
heart.plot
#Create a new dataframe with the information needed to plot the model
plotting.data<-expand.grid( biking = seq(min(Heart_Data$biking), max(Heart_Data$biking), length.out=30),
smoking=c(min(Heart_Data$smoking), mean(Heart_Data$smoking), max(Heart_Data$smoking)))
plotting.data
View(plotting.data)
#Make the graph ready for publication
heart.plot <-
heart.plot +
theme_bw() +
labs(title = "Rates of heart disease (% of population) \n as a function of biking to work and smoking",
x = "Biking to work (% of population)",
y = "Heart disease (% of population)",
color = "Smoking \n (% of population)")
heart.plot
#Final plot with equation of line
heart.plot + annotate(geom="text", x=30, y=1.75, label=" = 15 + (-0.2*biking) + (0.178*smoking)")
t = 0:max(heart_data$biking)
y = 14.98 - 0.2*t
plot(t,y)
plot(t,y,type="l")
temp=plot(t,y,type="l")
t2 = heart.plot + temp
t2
heart.plot <- ggplot(Heart_Data, aes(x=biking, y=heart.disease)) +
geom_point()
heart.plot
t = 0:max(heart_data$biking)
y = 14.98 - 0.2*t
temp=plot(t,y,type="l")
t2 = heart.plot + temp
t2
df=data.frame(t,y)
View(df)
t2 = heart.plot + geom_line(df, aes=(y))
temp = ggplot(df, aes(x=t,y=y)) + geom_line()
t2 = heart.plot + temp
t2 <- heart.plot + temp
t2
temp
t2 <- heart.plot + temp
t2
# ---------------------------------------------------------------------------- #
library(summarytools)
descr(iris, headings = FALSE) # or descr(iris)
library(readxl)
marketing_campaign <- read_excel("E:/Third Year/Statistical Data Analysis using R/Datasets/marketing_campaign.xlsx")
View(marketing_campaign)
d1 = spread(marketing_campaign, Marital_Status, Income)
library(tidyr)
d1 = spread(marketing_campaign, Marital_Status, Income)
View(d1)
